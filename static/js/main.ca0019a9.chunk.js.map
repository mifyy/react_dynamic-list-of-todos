{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOption","TodoList","filteredTodos","setChosenTodo","handleToggleModal","chosenTodo","className","map","todo","id","completed","title","type","onClick","handleChosenTodo","dropList","value","All","label","Active","Completed","TodoFilter","todos","setFilter","useState","searchInput","setSearchInput","option","setOption","useEffect","filterTodos","filter","toLowerCase","includes","trim","onChange","e","target","optionList","placeholder","inputValue","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","toggleModal","setToggleModal","selectedUser","setSelectedUser","userId","user","href","email","name","App","isLoading","setIsLoading","setTodos","setFilteredTodos","response","Error","data","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca0019a9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\nenum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nconst dropList = [\n  { value: FilterOption.All, label: 'All' },\n  { value: FilterOption.Active, label: 'Active' },\n  { value: FilterOption.Completed, label: 'Completed' },\n];\n\ntype Props = {\n  todos: Todo[];\n  setFilter: (filter: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilter }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [option, setOption] = useState(FilterOption.All);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n\n    setSearchInput(inputValue);\n  };\n\n  useEffect(() => {\n    const filterTodos = () => {\n      return todos.filter((todo) => todo.title.toLowerCase()\n        .includes(searchInput.trim().toLowerCase()));\n    };\n\n    switch (option) {\n      case FilterOption.Active:\n        setFilter(filterTodos().filter((todo) => !todo.completed));\n        break;\n\n      case FilterOption.Completed:\n        setFilter(filterTodos().filter((todo) => todo.completed));\n        break;\n\n      default:\n        setFilter(filterTodos());\n        break;\n    }\n  }, [searchInput, todos, setFilter, option]);\n\n  const reset = () => {\n    setSearchInput('');\n    setOption(FilterOption.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setOption(e.target.value as FilterOption)}\n          >\n            {dropList.map(optionList => (\n              <option value={optionList.value}>{optionList.label}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchInput && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[];\n  setChosenTodo: (chosenTodo: Todo) => void,\n  handleToggleModal: () => void,\n  chosenTodo: Todo | null,\n};\n\nexport const TodoList: React\n  .FC<Props> = ({\n  filteredTodos, setChosenTodo, handleToggleModal, chosenTodo,\n}) => {\n  const handleChosenTodo = (todo: Todo) => {\n    setChosenTodo(todo);\n    handleToggleModal();\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredTodos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChosenTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${todo.id === chosenTodo?.id ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  chosenTodo?: Todo | null;\n  toggleModal: boolean;\n  setChosenTodo: (chosenTodo: Todo | null) => void;\n  setToggleModal: (toggleModal: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  chosenTodo,\n  setChosenTodo,\n  toggleModal,\n  setToggleModal,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (chosenTodo) {\n      getUser(chosenTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [chosenTodo]);\n\n  return (\n    <div className={`modal ${toggleModal ? 'is-active' : ''}`} data-cy=\"modal\">\n      {toggleModal && <div className=\"modal-background\" />}\n      {toggleModal && !selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setChosenTodo(null);\n                setToggleModal(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            {chosenTodo && (\n              <p className=\"block\" data-cy=\"modal-title\">\n                {chosenTodo?.title}\n              </p>\n            )}\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={\n                chosenTodo?.completed ? 'has-text-success' : 'has-text-danger'\n              }\n              >\n                {chosenTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n  const [chosenTodo, setChosenTodo] = useState<Todo | null>(null);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    /* eslint-disable max-len */\n    fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json')\n      .then((response) => {\n        if (!response) {\n          throw new Error('No network response');\n        }\n\n        return response.json();\n      })\n      .then((data) => {\n        if (!data) {\n          throw new Error('No data');\n        }\n\n        setTodos(data);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilter={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : null}\n              <TodoList\n                filteredTodos={filteredTodos}\n                setChosenTodo={setChosenTodo}\n                handleToggleModal={handleToggleModal}\n                chosenTodo={chosenTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {chosenTodo && (\n        <TodoModal\n          chosenTodo={chosenTodo}\n          toggleModal={toggleModal}\n          setChosenTodo={setChosenTodo}\n          setToggleModal={setToggleModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}