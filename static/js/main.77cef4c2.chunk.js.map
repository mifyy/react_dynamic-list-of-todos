{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","filter","setChosenTodo","handleToggleModal","chosenTodo","className","map","todo","id","completed","title","type","onClick","handleChosenTodo","TodoFilter","todos","setFilter","useState","searchInput","setSearchInput","option","setOption","useEffect","filteredTodos","toLowerCase","includes","trim","onChange","e","target","value","placeholder","inputValue","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","toggleModal","setToggleModal","selectedUser","setSelectedUser","userId","user","href","email","name","App","loading","setLoading","setTodos","response","data","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77cef4c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filter: Todo[];\n  setChosenTodo: (chosenTodo: Todo) => void,\n  handleToggleModal: () => void,\n  chosenTodo: Todo | null,\n};\n\nexport const TodoList: React\n  .FC<Props> = ({\n  filter, setChosenTodo, handleToggleModal, chosenTodo,\n}) => {\n  const handleChosenTodo = (todo: Todo) => {\n    setChosenTodo(todo);\n    handleToggleModal();\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {filter.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={todo.completed\n                  ? 'has-text-success' : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChosenTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${todo.id === chosenTodo?.id ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setFilter: (filter: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setFilter }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [option, setOption] = useState('all');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = e.target.value;\n\n    setSearchInput(inputValue);\n  };\n\n  useEffect(() => {\n    let filteredTodos = todos.filter((todo) => todo\n      .title.toLowerCase().includes(searchInput.trim().toLowerCase()));\n\n    if (option === 'active') {\n      filteredTodos = filteredTodos.filter((todo) => !todo.completed);\n    }\n\n    if (option === 'completed') {\n      filteredTodos = filteredTodos.filter((todo) => todo.completed);\n    }\n\n    setFilter(filteredTodos);\n  }, [searchInput, todos, setFilter, option]);\n\n  const reset = () => {\n    setSearchInput('');\n    setOption('all');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setOption(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchInput && (\n          /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={reset}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  chosenTodo?: Todo | null;\n  toggleModal: boolean;\n  setChosenTodo: (chosenTodo: Todo | null) => void;\n  setToggleModal: (toggleModal: boolean) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  chosenTodo,\n  setChosenTodo,\n  toggleModal,\n  setToggleModal,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (chosenTodo) {\n      getUser(chosenTodo.userId).then(user => setSelectedUser(user));\n    }\n  }, [chosenTodo]);\n\n  return (\n    <div className={`modal ${toggleModal ? 'is-active' : ''}`} data-cy=\"modal\">\n      {toggleModal && <div className=\"modal-background\" />}\n      {toggleModal && !selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${chosenTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setChosenTodo(null);\n                setToggleModal(false);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            {chosenTodo ? (\n              <p className=\"block\" data-cy=\"modal-title\">\n                {chosenTodo?.title}\n              </p>\n            ) : null}\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">\n                {chosenTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState<Todo[]>(todos);\n  const [chosenTodo, setChosenTodo] = useState<Todo | null>(null);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  const handleToggleModal = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  useEffect(() => {\n    /* eslint-disable max-len */\n    fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json')\n      .then((response) => response.json())\n      .then((data) => {\n        setTodos(data);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              <TodoList filter={filter} setChosenTodo={setChosenTodo} handleToggleModal={handleToggleModal} chosenTodo={chosenTodo} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {chosenTodo && (\n        <TodoModal chosenTodo={chosenTodo} toggleModal={toggleModal} setChosenTodo={setChosenTodo} setToggleModal={setToggleModal} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}